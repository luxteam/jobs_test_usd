[
    {
        "case": "BL28_RS_CMP_001",
        "status": "active",
        "functions": [
            "create_compositor_node('Bilateralblur')",
            "connect_nodes('Render Layers', 'Image', 'Bilateral Blur', 'Image')",
            "connect_nodes('Bilateral Blur', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Bilateral Blur"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_002",
        "status": "active",
        "functions": [
            "create_compositor_node('Blur')",
            "connect_nodes('Render Layers', 'Image', 'Blur', 'Image')",
            "connect_nodes('Blur', 'Image', 'Composite', 'Image')",
            "nodes()['Blur'].size_x = 5",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Blur"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_003",
        "status": "active",
        "functions": [
            "create_compositor_node('BokehBlur')",
            "create_compositor_node('BokehImage')",
            "nodes()['Bokeh Image'].flaps = 3",
            "connect_nodes('Bokeh Image', 'Image', 'Bokeh Blur', 'Bokeh')",
            "connect_nodes('Render Layers', 'Image', 'Bokeh Blur', 'Image')",
            "connect_nodes('Bokeh Blur', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Bokeh Blur"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_004",
        "status": "active",
        "functions": [
            "create_compositor_node('Defocus')",
            "connect_nodes('Render Layers', 'Image', 'Defocus', 'Image')",
            "connect_nodes('Defocus', 'Image', 'Composite', 'Image')",
            "nodes()['Defocus'].use_zbuffer = True",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Defocus"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_005",
        "status": "active",
        "functions": [
            "create_compositor_node('Denoise')",
            "connect_nodes('Render Layers', 'Image', 'Denoise', 'Image')",
            "connect_nodes('Denoise', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Denoise"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_006",
        "status": "active",
        "functions": [
            "create_compositor_node('Despeckle')",
            "connect_nodes('Render Layers', 'Image', 'Despeckle', 'Image')",
            "connect_nodes('Despeckle', 'Image', 'Composite', 'Image')",
            "nodes()['Despeckle'].threshold = 0.02",
            "nodes()['Despeckle'].threshold_neighbor = 0",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Despeckle"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_007",
        "status": "active",
        "functions": [
            "create_compositor_node('DilateErode')",
            "create_compositor_node('SepRGBA')",
            "create_compositor_node('CombRGBA')",
            "connect_nodes('Render Layers', 'Image', 'Separate RGBA', 'Image')",
            "nodes()['Dilate/Erode'].distance = 2",
            "connect_nodes('Separate RGBA', 'R', 'Dilate/Erode', 'Mask')",
            "connect_nodes('Dilate/Erode', 'Mask', 'Combine RGBA', 'R')",
            "connect_nodes('Separate RGBA', 'G', 'Combine RGBA', 'G')",
            "connect_nodes('Separate RGBA', 'B', 'Combine RGBA', 'B')",
            "connect_nodes('Separate RGBA', 'A', 'Combine RGBA', 'A')",
            "connect_nodes('Combine RGBA', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Dilate/Erode"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_008",
        "status": "active",
        "functions": [
            "create_compositor_node('DBlur')",
            "connect_nodes('Render Layers', 'Image', 'Directional Blur', 'Image')",
            "connect_nodes('Directional Blur', 'Image', 'Composite', 'Image')",
            "nodes()['Directional Blur'].distance = 1",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Directional Blur"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_009",
        "status": "active",
        "functions": [
            "create_compositor_node('Glare')",
            "connect_nodes('Render Layers', 'Image', 'Glare', 'Image')",
            "connect_nodes('Glare', 'Image', 'Composite', 'Image')",
            "nodes()['Glare'].threshold = 0",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Glare"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_010",
        "status": "skipped",
        "functions": [
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Inpaint"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_011",
        "status": "skipped",
        "functions": [
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Pixalate"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_012",
        "status": "active",
        "functions": [
            "create_compositor_node('SunBeams')",
            "connect_nodes('Render Layers', 'Image', 'Sun Beams', 'Image')",
            "connect_nodes('Sun Beams', 'Image', 'Composite', 'Image')",
            "nodes()['Sun Beams'].ray_length = 0.05",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Sun Beams"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_013",
        "status": "active",
        "functions": [
            "create_compositor_node('VecBlur')",
            "connect_nodes('Render Layers', 'Image', 'Vector Blur', 'Image')",
            "connect_nodes('Vector Blur', 'Image', 'Composite', 'Image')",
            "nodes()['Vector Blur'].factor = 10",
            "bpy.data.scenes['Scene'].node_tree.nodes['Vector Blur'].inputs['Speed'].default_value[0] = 5",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Vector Blur"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_014",
        "status": "active",
        "functions": [
            "create_compositor_node('AlphaOver')",
            "connect_nodes('Render Layers', 'Image', 'Alpha Over', 2)",
            "connect_nodes('Alpha Over', 'Image', 'Composite', 'Image')",
            "nodes()['Alpha Over'].inputs['Fac'].default_value = 0.9",
            "nodes()['Alpha Over'].inputs[1].default_value = (0, 0, 0.5, 1)",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Alpha Over"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_015",
        "status": "active",
        "functions": [
            "create_compositor_node('BrightContrast')",
            "connect_nodes('Render Layers', 'Image', 'Bright/Contrast', 'Image')",
            "connect_nodes('Bright/Contrast', 'Image', 'Composite', 'Image')",
            "nodes()['Bright/Contrast'].inputs['Bright'].default_value = -3",
            "nodes()['Bright/Contrast'].inputs['Contrast'].default_value = 3",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Bright/Contrast"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_016",
        "status": "active",
        "functions": [
            "create_compositor_node('ColorBalance')",
            "connect_nodes('Render Layers', 'Image', 'Color Balance', 'Image')",
            "connect_nodes('Color Balance', 'Image', 'Composite', 'Image')",
            "nodes()['Color Balance'].lift = (0.8, 1, 0.8)",
            "nodes()['Color Balance'].gamma = (0.8, 1, 0.8)",
            "nodes()['Color Balance'].gain = (0, 1.5, 0)",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Color Balance"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_017",
        "status": "active",
        "functions": [
            "create_compositor_node('ColorCorrection')",
            "connect_nodes('Render Layers', 'Image', 'Color Correction', 'Image')",
            "connect_nodes('Color Correction', 'Image', 'Composite', 'Image')",
            "nodes()['Color Correction'].master_saturation = 2",
            "nodes()['Color Correction'].master_contrast = 2",
            "nodes()['Color Correction'].master_gamma = 2",
            "nodes()['Color Correction'].master_gain = 2",
            "nodes()['Color Correction'].master_lift = 1",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Color Correction"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_018",
        "status": "active",
        "functions": [
            "create_compositor_node('Gamma')",
            "connect_nodes('Render Layers', 'Image', 'Gamma', 'Image')",
            "connect_nodes('Gamma', 'Image', 'Composite', 'Image')",
            "nodes()['Gamma'].inputs['Gamma'].default_value = 0.3",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Gamma"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_019",
        "status": "skipped",
        "functions": [
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Hue Correct"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_020",
        "status": "skipped",
        "functions": [
            "create_compositor_node('HueSat')",
            "connect_nodes('Render Layers', 'Image', 'Hue Saturation Value', 'Image')",
            "connect_nodes('Hue Saturation Value', 'Image', 'Composite', 'Image')",
            "nodes()['Hue Saturation Value'].inputs[3].default_value = 0.9",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Hue Saturation Value"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_021",
        "status": "active",
        "functions": [
            "create_compositor_node('Invert')",
            "connect_nodes('Render Layers', 'Image', 'Invert', 'Color')",
            "connect_nodes('Invert', 'Color', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Invert"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_022",
        "status": "active",
        "functions": [
            "create_compositor_node('MixRGB')",
            "create_compositor_node('BokehImage')",
            "connect_nodes('Render Layers', 'Image', 'Mix', 'Image')",
            "connect_nodes('Bokeh Image', 'Image', 'Mix', 2)",
            "connect_nodes('Mix', 'Image', 'Composite', 'Image')",
            "nodes()['Mix'].blend_type = 'OVERLAY'",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Mix"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_023",
        "status": "active",
        "functions": [
            "create_compositor_node('Tonemap')",
            "connect_nodes('Render Layers', 'Image', 'Tonemap', 'Image')",
            "connect_nodes('Tonemap', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Tonemap"
        ],
        "scene": "Compositor.blend",
        "skip_config": [
            ["AMD Radeon RX Vega 56 (Metal)"]
        ]
    },
    {
        "case": "BL28_RS_CMP_024",
        "status": "active",
        "functions": [
            "create_compositor_node('BoxMask')",
            "connect_nodes('Render Layers', 'Image', 'Composite', 'Image')",
            "connect_nodes('Box Mask', 'Mask', 'Composite', 'Alpha')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Box Mask"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_025",
        "status": "skipped",
        "functions": [
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Channel Key"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_026",
        "status": "active",
        "functions": [
            "create_compositor_node('ChromaMatte')",
            "connect_nodes('Render Layers', 'Image', 'Chroma Key', 'Image')",
            "connect_nodes('Chroma Key', 'Image', 'Composite', 'Image')",
            "nodes()['Chroma Key'].inputs[1].default_value = (0.304, 0.429, 0.498, 1)",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Chroma Key"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_027",
        "status": "active",
        "functions": [
            "create_compositor_node('ColorSpill')",
            "connect_nodes('Render Layers', 'Image', 'Color Spill', 'Image')",
            "connect_nodes('Color Spill', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Color Spill"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_028",
        "status": "active",
        "functions": [
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Cryptomatte"
        ],
        "scene": "CompositorCryptomatte.blend",
        "skip_config": [
            ["AMD Radeon RX Vega 56 (Metal)"]
        ]
    },
    {
        "case": "BL28_RS_CMP_029",
        "status": "active",
        "functions": [
            "create_compositor_node('DiffMatte')",
            "create_compositor_node('RGB')",
            "connect_nodes('Render Layers', 'Image', 'Difference Key', 'Image 1')",
            "connect_nodes('RGB', 'RGBA', 'Difference Key', 'Image 2')",
            "connect_nodes('Difference Key', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Difference Key"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_030",
        "status": "active",
        "functions": [
            "create_compositor_node('DistanceMatte')",
            "connect_nodes('Render Layers', 'Image', 'Distance Key', 'Image')",
            "connect_nodes('Distance Key', 'Image', 'Composite', 'Image')",
            "nodes()['Distance Key'].tolerance = 1",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Distance Key"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_031",
        "status": "active",
        "functions": [
            "create_compositor_node('EllipseMask')",
            "connect_nodes('Render Layers', 'Image', 'Composite', 'Image')",
            "connect_nodes('Ellipse Mask', 'Mask', 'Composite', 'Alpha')",
            "nodes()['Ellipse Mask'].width = 1",
            "nodes()['Ellipse Mask'].height = 1",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Ellipse Mask"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_032",
        "status": "active",
        "functions": [
            "create_compositor_node('Keying')",
            "connect_nodes('Render Layers', 'Image', 'Keying', 'Image')",
            "connect_nodes('Keying', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Keying"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_033",
        "status": "active",
        "functions": [
            "create_compositor_node('LumaMatte')",
            "connect_nodes('Render Layers', 'Image', 'Luminance Key', 'Image')",
            "connect_nodes('Luminance Key', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Luminance Key"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_034",
        "status": "active",
        "functions": [
            "create_compositor_node('Crop')",
            "connect_nodes('Render Layers', 'Image', 'Crop', 'Image')",
            "connect_nodes('Crop', 'Image', 'Composite', 'Image')",
            "nodes()['Crop'].min_x = 200",
            "nodes()['Crop'].max_x = 580",
            "nodes()['Crop'].min_y = 560",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Crop"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_035",
        "status": "active",
        "functions": [
            "create_compositor_node('Flip')",
            "connect_nodes('Render Layers', 'Image', 'Flip', 'Image')",
            "connect_nodes('Flip', 'Image', 'Composite', 'Image')",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Flip"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_036",
        "status": "active",
        "functions": [
            "create_compositor_node('Lensdist')",
            "connect_nodes('Render Layers', 'Image', 'Lens Distortion', 'Image')",
            "connect_nodes('Lens Distortion', 'Image', 'Composite', 'Image')",
            "nodes()['Lens Distortion'].inputs['Distort'].default_value = 0.5",
            "nodes()['Lens Distortion'].inputs['Dispersion'].default_value = 0.5",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Lens Distortion"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_037",
        "status": "active",
        "functions": [
            "create_compositor_node('Rotate')",
            "connect_nodes('Render Layers', 'Image', 'Rotate', 'Image')",
            "connect_nodes('Rotate', 'Image', 'Composite', 'Image')",
            "nodes()['Rotate'].inputs[1].default_value = 0.785",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Rotate"
        ],
        "scene": "Compositor.blend"
    },
    {
        "case": "BL28_RS_CMP_038",
        "status": "active",
        "functions": [
            "create_compositor_node('Scale')",
            "connect_nodes('Render Layers', 'Image', 'Scale', 'Image')",
            "connect_nodes('Scale', 'Image', 'Composite', 'Image')",
            "nodes()['Scale'].inputs['X'].default_value = 2",
            "nodes()['Scale'].inputs['Y'].default_value = 2",
            "rpr_render(case)",
            "bpy.ops.wm.open_mainfile(filepath=os.path.join(RES_PATH, 'Compositor.blend'))"
        ],
        "script_info": [
            "Scale"
        ],
        "scene": "Compositor.blend"
    }
]