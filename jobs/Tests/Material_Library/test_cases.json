[
    {
        "case": "BL28_MAT_LIB_001",
        "status": "active",
        "script_info": [
            "Material: BarnFindOrange Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BarnFindOrange_Solid', 'BarnFindOrange_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_002",
        "status": "active",
        "script_info": [
            "Material: BasketCaseBlue Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BasketCaseBlue_Solid', 'BasketCaseBlue_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_003",
        "status": "active",
        "script_info": [
            "Material: BeachBumAqua Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BeachBumAqua_Metallic', 'BeachBumAqua_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_004",
        "status": "active",
        "script_info": [
            "Material: BlueBayou Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BlueBayou_Solid', 'BlueBayou_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_005",
        "status": "active",
        "script_info": [
            "Material: BoulevardBlack Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BoulevardBlack_Solid', 'BoulevardBlack_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_006",
        "status": "active",
        "script_info": [
            "Material: BurnOutBlue Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'BurnOutBlue_Metallic', 'BurnOutBlue_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_007",
        "status": "active",
        "script_info": [
            "Material: CandyPantsViolet Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'CandyPantsViolet_Metallic', 'CandyPantsViolet_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_008",
        "status": "active",
        "script_info": [
            "Material: Car Paint Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Metallic', 'Car_Paint_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_009",
        "status": "active",
        "script_info": [
            "Material: Car Paint Pearlescent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Pearlescent', 'Car_Paint_Pearlescent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_010",
        "status": "active",
        "script_info": [
            "Material: Car Paint Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Solid', 'Car_Paint_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_011",
        "status": "active",
        "script_info": [
            "Material: Champagne Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Champagne_Metallic', 'Champagne_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_012",
        "status": "active",
        "script_info": [
            "Material: CherryGumball Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'CherryGumball_Solid', 'CherryGumball_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_013",
        "status": "active",
        "script_info": [
            "Material: ChopTopSilver Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'ChopTopSilver_Metallic', 'ChopTopSilver_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_014",
        "status": "active",
        "script_info": [
            "Material: CruiseNightBlue Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'CruiseNightBlue_Metallic', 'CruiseNightBlue_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_015",
        "status": "active",
        "script_info": [
            "Material: DesertedTan Flat"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'DesertedTan_Flat', 'DesertedTan_Flat' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_016",
        "status": "active",
        "script_info": [
            "Material: EastwoodBluePearl Pearlescent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'EastwoodBluePearl_Pearlescent', 'EastwoodBluePearl_Pearlescent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_017",
        "status": "active",
        "script_info": [
            "Material: EastwoodRoyalBlue Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'EastwoodRoyalBlue_Metallic', 'EastwoodRoyalBlue_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_018",
        "status": "active",
        "script_info": [
            "Material: ElectricYellow Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'ElectricYellow_Solid', 'ElectricYellow_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_019",
        "status": "active",
        "script_info": [
            "Material: EuroRacingGreen Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'EuroRacingGreen_Metallic', 'EuroRacingGreen_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_020",
        "status": "active",
        "script_info": [
            "Material: EyeCandyGreen Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'EyeCandyGreen_Solid', 'EyeCandyGreen_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_021",
        "status": "active",
        "script_info": [
            "Material: GasserGreen Pearlescent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'GasserGreen_Pearlescent', 'GasserGreen_Pearlescent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_022",
        "status": "active",
        "script_info": [
            "Material: HugginOrange Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'HugginOrange_Solid', 'HugginOrange_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_023",
        "status": "active",
        "script_info": [
            "Material: LimeSqueezinGreen Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'LimeSqueezinGreen_Solid', 'LimeSqueezinGreen_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_024",
        "status": "active",
        "script_info": [
            "Material: MalibuSunsetOrange Pearlescent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'MalibuSunsetOrange_Pearlescent', 'MalibuSunsetOrange_Pearlescent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_025",
        "status": "active",
        "script_info": [
            "Material: OrangeUBad Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'OrangeUBad_Solid', 'OrangeUBad_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_026",
        "status": "active",
        "script_info": [
            "Material: PinupRed Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'PinupRed_Solid', 'PinupRed_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_027",
        "status": "active",
        "script_info": [
            "Material: PlumCrazy Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'PlumCrazy_Metallic', 'PlumCrazy_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_028",
        "status": "active",
        "script_info": [
            "Material: ProStreetRed Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'ProStreetRed_Solid', 'ProStreetRed_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_029",
        "status": "active",
        "script_info": [
            "Material: PureWhite Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'PureWhite_Solid', 'PureWhite_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_030",
        "status": "active",
        "script_info": [
            "Material: QuarterMileCandyRed Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'QuarterMileCandyRed_Solid', 'QuarterMileCandyRed_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_031",
        "status": "active",
        "script_info": [
            "Material: RatRodBlack Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'RatRodBlack_Solid', 'RatRodBlack_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_032",
        "status": "active",
        "script_info": [
            "Material: ReptileRed Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'ReptileRed_Solid', 'ReptileRed_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_033",
        "status": "active",
        "script_info": [
            "Material: RodzBerry Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'RodzBerry_Metallic', 'RodzBerry_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_034",
        "status": "active",
        "script_info": [
            "Material: RottenLimeGreen Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'RottenLimeGreen_Solid', 'RottenLimeGreen_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_035",
        "status": "active",
        "script_info": [
            "Material: SaltWaterTaffyTeal Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'SaltWaterTaffyTeal_Metallic', 'SaltWaterTaffyTeal_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_036",
        "status": "active",
        "script_info": [
            "Material: StraightAxleRedPearl Pearlescent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'StraightAxleRedPearl_Pearlescent', 'StraightAxleRedPearl_Pearlescent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_037",
        "status": "active",
        "script_info": [
            "Material: SugarCoatItGold Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'SugarCoatItGold_Metallic', 'SugarCoatItGold_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_038",
        "status": "active",
        "script_info": [
            "Material: TequilaLimeNGold Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'TequilaLimeNGold_Solid', 'TequilaLimeNGold_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_039",
        "status": "active",
        "script_info": [
            "Material: TunnelRamGray Metallic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'TunnelRamGray_Metallic', 'TunnelRamGray_Metallic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_040",
        "status": "active",
        "script_info": [
            "Material: USABrightWhite Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'USABrightWhite_Solid', 'USABrightWhite_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_041",
        "status": "active",
        "script_info": [
            "Material: USABrightWhiteFlat Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'USABrightWhiteFlat_Solid', 'USABrightWhiteFlat_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_042",
        "status": "active",
        "script_info": [
            "Material: VinoRojo Solid"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'VinoRojo_Solid', 'VinoRojo_Solid' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_043",
        "status": "active",
        "script_info": [
            "Material: Carbon Fiber"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Carbon_Fiber', 'Carbon_Fiber' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_044",
        "status": "active",
        "script_info": [
            "Material: Carbon Fiber Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Carbon_Fiber_Glossy', 'Carbon_Fiber_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_045",
        "status": "active",
        "script_info": [
            "Material: Carbon Fiber GlossyCoat"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Carbon_Fiber_GlossyCoat', 'Carbon_Fiber_GlossyCoat' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_046",
        "status": "active",
        "script_info": [
            "Material: Carbon Fiber SemiGlossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Carbon_Fiber_SemiGlossy', 'Carbon_Fiber_SemiGlossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_047",
        "status": "active",
        "script_info": [
            "Material: FiberGlass"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'FiberGlass', 'FiberGlass' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_048",
        "status": "active",
        "script_info": [
            "Material: Concrete BrickCracks Grey"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_BrickCracks_Grey', 'Concrete_BrickCracks_Grey' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_049",
        "status": "active",
        "script_info": [
            "Material: Concrete PaintedCracks"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_PaintedCracks', 'Concrete_PaintedCracks' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_050",
        "status": "active",
        "script_info": [
            "Material: Concrete PaintedRough"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_PaintedRough', 'Concrete_PaintedRough' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_051",
        "status": "active",
        "script_info": [
            "Material: Concrete Stone"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_Stone', 'Concrete_Stone' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_052",
        "status": "active",
        "script_info": [
            "Material: Concrete Tiles"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_Tiles', 'Concrete_Tiles' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_053",
        "status": "active",
        "script_info": [
            "Material: Concrete WornBare"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_WornBare', 'Concrete_WornBare' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_054",
        "status": "active",
        "script_info": [
            "Material: Concrete WornBare SmoothBump"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Concrete_WornBare_SmoothBump', 'Concrete_WornBare_SmoothBump' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_055",
        "status": "active",
        "script_info": [
            "Material: Emissive Fluorescent Yellow"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Emissive_Fluorescent_Yellow', 'Emissive_Fluorescent_Yellow' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_056",
        "status": "active",
        "script_info": [
            "Material: Emissive Fluorescent Cyan"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Emissive_Fluorescent_Cyan', 'Emissive_Fluorescent_Cyan' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_057",
        "status": "active",
        "script_info": [
            "Material: Emissive Fluorescent Magenta"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Emissive_Fluorescent_Magenta', 'Emissive_Fluorescent_Magenta' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_058",
        "status": "active",
        "script_info": [
            "Material: Emissive Fluorescent White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Emissive_Fluorescent_White', 'Emissive_Fluorescent_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_059",
        "status": "active",
        "script_info": [
            "Material: Emissive CoolLight"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Emissive_CoolLight', 'Emissive_CoolLight' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_060",
        "status": "active",
        "script_info": [
            "Material: Aluminium Anodized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Anodized', 'Aluminium_Anodized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_061",
        "status": "active",
        "script_info": [
            "Material: Aluminium Directional"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Directional', 'Aluminium_Directional' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_062",
        "status": "active",
        "script_info": [
            "Material: Aluminium Oxidiazed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Oxidiazed', 'Aluminium_Oxidiazed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_063",
        "status": "active",
        "script_info": [
            "Material: Aluminium Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Polished', 'Aluminium_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_064",
        "status": "active",
        "script_info": [
            "Material: Aluminium SandBlasted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_SandBlasted', 'Aluminium_SandBlasted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_065",
        "status": "active",
        "script_info": [
            "Material: Brass Cartridge"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Cartridge', 'Brass_Cartridge' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_066",
        "status": "active",
        "script_info": [
            "Material: Brass Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass Matte', 'Brass Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_067",
        "status": "active",
        "script_info": [
            "Material: Brass Oxidized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Oxidized', 'Brass_Oxidized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_068",
        "status": "active",
        "script_info": [
            "Material: Brass Patinated"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Patinated', 'Brass_Patinated' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_069",
        "status": "active",
        "script_info": [
            "Material: Brass Standard"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Standard', 'Brass_Standard' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_070",
        "status": "active",
        "script_info": [
            "Material: Bronze Corrision"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Corrision', 'Bronze_Corrision' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_071",
        "status": "active",
        "script_info": [
            "Material: Bronze Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Matte', 'Bronze_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_072",
        "status": "active",
        "script_info": [
            "Material: Bronze Oxidized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Oxidized', 'Bronze_Oxidized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_073",
        "status": "active",
        "script_info": [
            "Material: Bronze Polished2"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Polished2', 'Bronze_Polished2' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_074",
        "status": "active",
        "script_info": [
            "Material: Bronze Rough"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Rough', 'Bronze_Rough' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_075",
        "status": "active",
        "script_info": [
            "Material: Chrome Dusty"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Chrome_Dusty', 'Chrome_Dusty' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_076",
        "status": "active",
        "script_info": [
            "Material: Chrome Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Chrome_Matte', 'Chrome_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_077",
        "status": "active",
        "script_info": [
            "Material: Chrome Sandblasted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Chrome_Sandblasted', 'Chrome_Sandblasted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_078",
        "status": "active",
        "script_info": [
            "Material: Chrome Scratched"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Chrome_Scratched', 'Chrome_Scratched' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_079",
        "status": "active",
        "script_info": [
            "Material: Copper Brushed2"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Brushed2', 'Copper_Brushed2' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_080",
        "status": "active",
        "script_info": [
            "Material: Copper Dented"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Dented', 'Copper_Dented' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_081",
        "status": "active",
        "script_info": [
            "Material: Copper Old"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Old', 'Copper_Old' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_082",
        "status": "active",
        "script_info": [
            "Material: Copper Wrought"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Wrought', 'Copper_Wrought' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_083",
        "status": "active",
        "script_info": [
            "Material: Generic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Generic', 'Generic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_084",
        "status": "active",
        "script_info": [
            "Material: Gold"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold', 'Gold' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_085",
        "status": "active",
        "script_info": [
            "Material: Gold Foil Rough"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Foil_Rough', 'Gold_Foil_Rough' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_086",
        "status": "active",
        "script_info": [
            "Material: Gold Paint"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Paint', 'Gold_Paint' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_087",
        "status": "active",
        "script_info": [
            "Material: Gold Paint Cracked"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Paint_Cracked', 'Gold_Paint_Cracked' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_088",
        "status": "active",
        "script_info": [
            "Material: Gold Rough"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Rough', 'Gold_Rough' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_089",
        "status": "active",
        "script_info": [
            "Material: Iron Hammered"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Iron_Hammered', 'Iron_Hammered' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_090",
        "status": "active",
        "script_info": [
            "Material: Iron Oxidized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Iron_Oxidized', 'Iron_Oxidized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_091",
        "status": "active",
        "script_info": [
            "Material: Iron Rugged"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Iron_Rugged', 'Iron_Rugged' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_092",
        "status": "active",
        "script_info": [
            "Material: Iron Smooth"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Iron_Smooth', 'Iron_Smooth' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_093",
        "status": "active",
        "script_info": [
            "Material: Iron Worn"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Iron_Worn', 'Iron_Worn' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_094",
        "status": "active",
        "script_info": [
            "Material: Lead Rough"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Lead_Rough', 'Lead_Rough' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_095",
        "status": "active",
        "script_info": [
            "Material: Lead Rusted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Lead_Rusted', 'Lead_Rusted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_096",
        "status": "active",
        "script_info": [
            "Material: Lead Sandblasted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Lead_Sandblasted', 'Lead_Sandblasted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_097",
        "status": "active",
        "script_info": [
            "Material: Lead Smooth"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Lead_Smooth', 'Lead_Smooth' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_098",
        "status": "active",
        "script_info": [
            "Material: Steel Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Steel_Blue', 'Steel_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_099",
        "status": "active",
        "script_info": [
            "Material: Steel Galvanized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Steel_Galvanized', 'Steel_Galvanized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_100",
        "status": "active",
        "script_info": [
            "Material: Steel Oxidized"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Steel_Oxidized', 'Steel_Oxidized' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_101",
        "status": "active",
        "script_info": [
            "Material: Steel Smooth"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Steel_Smooth', 'Steel_Smooth' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_102",
        "status": "active",
        "script_info": [
            "Material: Steel Worn"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Steel_Worn', 'Steel_Worn' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_103",
        "status": "active",
        "script_info": [
            "Material: Fabric Matte Solid Beige"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fabric_Matte_Solid_Beige', 'Fabric_Matte_Solid_Beige' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_104",
        "status": "active",
        "script_info": [
            "Material: Fabric Matte Solid Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fabric_Matte_Solid_Red', 'Fabric_Matte_Solid_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_105",
        "status": "active",
        "script_info": [
            "Material: Fabric Matte Transparent Beige"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fabric_Matte_Transparent_Beige', 'Fabric_Matte_Transparent_Beige' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_106",
        "status": "active",
        "script_info": [
            "Material: Fabric Matte Transparent Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fabric_Matte_Transparent_Red', 'Fabric_Matte_Transparent_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_107",
        "status": "active",
        "script_info": [
            "Material: Fabric Silk"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fabric_Silk', 'Fabric_Silk' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_108",
        "status": "active",
        "script_info": [
            "Material: Fur Carpet Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Fur_Carpet_Displacement', 'Fur_Carpet_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_109",
        "status": "active",
        "script_info": [
            "Material: Glass Antique"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Antique', 'Glass_Antique' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_110",
        "status": "active",
        "script_info": [
            "Material: Glass CarBreakLight"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_CarBreakLight', 'Glass_CarBreakLight' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_111",
        "status": "active",
        "script_info": [
            "Material: Glass CarHeadLight"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_CarHeadLight', 'Glass_CarHeadLight' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_112",
        "status": "active",
        "script_info": [
            "Material: Glass CarIndicatorLight"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_CarIndicatorLight', 'Glass_CarIndicatorLight' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_113",
        "status": "active",
        "script_info": [
            "Material: Glass Clear Window"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Clear_Window', 'Glass_Clear_Window' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_114",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Blue', 'Glass_Solid_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_115",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Brown"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Brown', 'Glass_Solid_Brown' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_116",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Clear"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Clear', 'Glass_Solid_Clear' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_117",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Clear Scratched"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Clear_Scratched', 'Glass_Solid_Clear_Scratched' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_118",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Frosted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Frosted', 'Glass_Solid_Frosted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_119",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Green', 'Glass_Solid_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_120",
        "status": "active",
        "script_info": [
            "Material: Glass Solid GreenBlue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_GreenBlue', 'Glass_Solid_GreenBlue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_121",
        "status": "active",
        "script_info": [
            "Material: Glass Solid GreenBlue Scratched"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_GreenBlue_Scratched', 'Glass_Solid_GreenBlue_Scratched' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_122",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Red', 'Glass_Solid_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_123",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Tinted"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Tinted', 'Glass_Solid_Tinted' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_124",
        "status": "active",
        "script_info": [
            "Material: Glass Solid Yellow"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Solid_Yellow', 'Glass_Solid_Yellow' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_125",
        "status": "active",
        "script_info": [
            "Material: Glass Thin Bronze"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Thin_Bronze', 'Glass_Thin_Bronze' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_126",
        "status": "active",
        "script_info": [
            "Material: Glass Thin Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Thin_Green', 'Glass_Thin_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_127",
        "status": "active",
        "script_info": [
            "Material: Glass Tinted Dark"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Tinted_Dark', 'Glass_Tinted_Dark' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_128",
        "status": "active",
        "script_info": [
            "Material: Glass Used"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Glass_Used', 'Glass_Used' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_129",
        "status": "active",
        "script_info": [
            "Material: Mirror"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Mirror', 'Mirror' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_130",
        "status": "active",
        "script_info": [
            "Material: Ground Dark Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Ground_Dark_Displacement', 'Ground_Dark_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_131",
        "status": "active",
        "script_info": [
            "Material: Ground Dark"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Ground_Dark', 'Ground_Dark' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_132",
        "status": "active",
        "script_info": [
            "Material: Ground Grass"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Ground_Grass', 'Ground_Grass' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_133",
        "status": "active",
        "script_info": [
            "Material: Ground Grass Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Ground_Grass_Displacement', 'Ground_Grass_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_134",
        "status": "active",
        "script_info": [
            "Material: Ground Grass Cut Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Ground_Grass_Cut_Displacement', 'Ground_Grass_Cut_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_135",
        "status": "active",
        "script_info": [
            "Material: Jewels Diamond"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Jewels_Diamond', 'Jewels_Diamond' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_136",
        "status": "active",
        "script_info": [
            "Material: Jewels Emerald"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Jewels_Emerald', 'Jewels_Emerald' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_137",
        "status": "active",
        "script_info": [
            "Material: Jewels Ruby"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Jewels_Ruby', 'Jewels_Ruby' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_138",
        "status": "active",
        "script_info": [
            "Material: Leather Beige"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Leather_Beige', 'Leather_Beige' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_139",
        "status": "active",
        "script_info": [
            "Material: Leather Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Leather_Black', 'Leather_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_140",
        "status": "active",
        "script_info": [
            "Material: Leather Brown"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Leather_Brown', 'Leather_Brown' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_141",
        "status": "active",
        "script_info": [
            "Material: Liquids Alcohol Champagne"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Liquids_Alcohol_Champagne', 'Liquids_Alcohol_Champagne' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_142",
        "status": "active",
        "script_info": [
            "Material: Water Transparent"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Water_Transparent', 'Water_Transparent' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_143",
        "status": "active",
        "script_info": [
            "Material: Water Transparent Bump"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Water_Transparent_Bump', 'Water_Transparent_Bump' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_144",
        "status": "active",
        "script_info": [
            "Material: Water Transparent Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Water_Transparent_Displacement', 'Water_Transparent_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_145",
        "status": "active",
        "script_info": [
            "Material: Car Paint Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Black', 'Car_Paint_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_146",
        "status": "active",
        "script_info": [
            "Material: Car Paint Bue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Bue', 'Car_Paint_Bue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_147",
        "status": "active",
        "script_info": [
            "Material: Car Paint Dark Grey"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Dark_Grey', 'Car_Paint_Dark_Grey' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_148",
        "status": "active",
        "script_info": [
            "Material: Car Paint Ice Silver"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Ice_Silver', 'Car_Paint_Ice_Silver' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_149",
        "status": "active",
        "script_info": [
            "Material: Car Paint Indy Yellow"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Indy_Yellow', 'Car_Paint_Indy_Yellow' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_150",
        "status": "active",
        "script_info": [
            "Material: Car Paint Inferno"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Inferno', 'Car_Paint_Inferno' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_151",
        "status": "active",
        "script_info": [
            "Material: Car Paint Jasmine Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Jasmine_Green', 'Car_Paint_Jasmine_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_152",
        "status": "active",
        "script_info": [
            "Material: Car Paint Lapis Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Lapis_Blue', 'Car_Paint_Lapis_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_153",
        "status": "active",
        "script_info": [
            "Material: Car Paint Lava Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Lava_Red', 'Car_Paint_Lava_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_154",
        "status": "active",
        "script_info": [
            "Material: Car Paint North Grey"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_North_Grey', 'Car_Paint_North_Grey' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_155",
        "status": "active",
        "script_info": [
            "Material: Car Paint Tungsten"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Tungsten', 'Car_Paint_Tungsten' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_156",
        "status": "active",
        "script_info": [
            "Material: Car Paint Venetian Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Venetian_Red', 'Car_Paint_Venetian_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_157",
        "status": "active",
        "script_info": [
            "Material: Car Paint Vibrant Violet"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Vibrant_Violet', 'Car_Paint_Vibrant_Violet' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_158",
        "status": "active",
        "script_info": [
            "Material: Car Paint Wilderness Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Car_Paint_Wilderness_Green', 'Car_Paint_Wilderness_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_159",
        "status": "active",
        "script_info": [
            "Material: Metallic Paint Matte Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Metallic_Paint_Matte_Red', 'Metallic_Paint_Matte_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_160",
        "status": "active",
        "script_info": [
            "Material: Metallic Paint Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Metallic_Paint_Red', 'Metallic_Paint_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_161",
        "status": "active",
        "script_info": [
            "Material: Metallic Paint Silver"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Metallic_Paint_Silver', 'Metallic_Paint_Silver' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_162",
        "status": "active",
        "script_info": [
            "Material: Scratched Metallic Paint Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Scratched_Metallic_Paint_Red', 'Scratched_Metallic_Paint_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_163",
        "status": "active",
        "script_info": [
            "Material: Scratched Metallic Paint Yellow"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Scratched_Metallic_Paint_Yellow', 'Scratched_Metallic_Paint_Yellow' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_164",
        "status": "active",
        "script_info": [
            "Material: Aluminium Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Brushed', 'Aluminium_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_165",
        "status": "active",
        "script_info": [
            "Material: Aluminium Cast"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Cast', 'Aluminium_Cast' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_166",
        "status": "active",
        "script_info": [
            "Material: Aluminium Corrugated"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Corrugated', 'Aluminium_Corrugated' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_167",
        "status": "active",
        "script_info": [
            "Material: Aluminium Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Aluminium_Matte', 'Aluminium_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_168",
        "status": "active",
        "script_info": [
            "Material: Brass Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Brushed', 'Brass_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_169",
        "status": "active",
        "script_info": [
            "Material: Brass Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Polished', 'Brass_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_170",
        "status": "active",
        "script_info": [
            "Material: Brass Satin"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brass_Satin', 'Brass_Satin' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_171",
        "status": "active",
        "script_info": [
            "Material: Cast Iron"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Cast_Iron', 'Cast_Iron' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_172",
        "status": "active",
        "script_info": [
            "Material: Chrome"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Chrome', 'Chrome' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_173",
        "status": "active",
        "script_info": [
            "Material: Copper Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Brushed', 'Copper_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_174",
        "status": "active",
        "script_info": [
            "Material: Copper Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Polished', 'Copper_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_175",
        "status": "active",
        "script_info": [
            "Material: Copper Satin"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Copper_Satin', 'Copper_Satin' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_176",
        "status": "active",
        "script_info": [
            "Material: Galvanized Steel"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Galvanized-Steel', 'Galvanized-Steel' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_177",
        "status": "active",
        "script_info": [
            "Material: Gun Metal"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gun_Metal', 'Gun_Metal' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_178",
        "status": "active",
        "script_info": [
            "Material: Mercury"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Mercury', 'Mercury' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_179",
        "status": "active",
        "script_info": [
            "Material: Metal Plate"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Metal_Plate', 'Metal_Plate' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_180",
        "status": "active",
        "script_info": [
            "Material: Rust Metal"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rust_Metal', 'Rust_Metal' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_181",
        "status": "active",
        "script_info": [
            "Material: Stainless Steel"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stainless_Steel', 'Stainless_Steel' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_182",
        "status": "active",
        "script_info": [
            "Material: Stainless Steel Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stainless_Steel_Brushed', 'Stainless_Steel_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_183",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell LaserLemon"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_LaserLemon', 'Paint_EggShell_LaserLemon' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_184",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell SleekWhite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_SleekWhite', 'Paint_EggShell_SleekWhite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_185",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell SunValley"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_SunValley', 'Paint_EggShell_SunValley' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_186",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell Tanzanite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_Tanzanite', 'Paint_EggShell_Tanzanite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_187",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell TartOrange"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_TartOrange', 'Paint_EggShell_TartOrange' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_188",
        "status": "active",
        "script_info": [
            "Material: Paint EggShell TropicalSea"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_EggShell_TropicalSea', 'Paint_EggShell_TropicalSea' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_189",
        "status": "active",
        "script_info": [
            "Material: Paint Flat LaserLemon"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_LaserLemon', 'Paint_Flat_LaserLemon' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_190",
        "status": "active",
        "script_info": [
            "Material: Paint Flat SleekWhite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_SleekWhite', 'Paint_Flat_SleekWhite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_191",
        "status": "active",
        "script_info": [
            "Material: Paint Flat SunValley"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_SunValley', 'Paint_Flat_SunValley' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_192",
        "status": "active",
        "script_info": [
            "Material: Paint Flat Tanzanite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_Tanzanite', 'Paint_Flat_Tanzanite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_193",
        "status": "active",
        "script_info": [
            "Material: Paint Flat TartOrange"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_TartOrange', 'Paint_Flat_TartOrange' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_194",
        "status": "active",
        "script_info": [
            "Material: Paint Flat TawnyDayLily"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_TawnyDayLily', 'Paint_Flat_TawnyDayLily' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_195",
        "status": "active",
        "script_info": [
            "Material: Paint Flat TropicalSea"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_TropicalSea', 'Paint_Flat_TropicalSea' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_196",
        "status": "active",
        "script_info": [
            "Material: Paint Flat VoilePink"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Flat_VoilePink', 'Paint_Flat_VoilePink' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_197",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy LaserLemon"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_LaserLemon', 'Paint_Glossy_LaserLemon' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_198",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy SleekWhite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_SleekWhite', 'Paint_Glossy_SleekWhite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_199",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy SunValley"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_SunValley', 'Paint_Glossy_SunValley' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_200",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy Tanzanite"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_Tanzanite', 'Paint_Glossy_Tanzanite' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_201",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy TartOrange"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_TartOrange', 'Paint_Glossy_TartOrange' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_202",
        "status": "active",
        "script_info": [
            "Material: Paint Glossy TropicalSea"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Paint_Glossy_TropicalSea', 'Paint_Glossy_TropicalSea' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_203",
        "status": "active",
        "script_info": [
            "Material: Plastic Glossy Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Glossy_Black', 'Plastic_Glossy_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_204",
        "status": "active",
        "script_info": [
            "Material: Plastic Glossy Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Glossy_Red', 'Plastic_Glossy_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_205",
        "status": "active",
        "script_info": [
            "Material: Plastic Matte Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Matte_Black', 'Plastic_Matte_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_206",
        "status": "active",
        "script_info": [
            "Material: Plastic Matte Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Matte_Red', 'Plastic_Matte_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_207",
        "status": "active",
        "script_info": [
            "Material: Plastic Matte White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Matte_White', 'Plastic_Matte_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_208",
        "status": "active",
        "script_info": [
            "Material: Styrofoam"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Styrofoam', 'Styrofoam' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_209",
        "status": "active",
        "script_info": [
            "Material: Porcelain Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_Black', 'Porcelain_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_210",
        "status": "active",
        "script_info": [
            "Material: Porcelain Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_Blue', 'Porcelain_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_211",
        "status": "active",
        "script_info": [
            "Material: Porcelain Cracked White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_Cracked_White', 'Porcelain_Cracked_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_212",
        "status": "active",
        "script_info": [
            "Material: Porcelain Matte White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_Matte_White', 'Porcelain_Matte_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_213",
        "status": "active",
        "script_info": [
            "Material: Porcelain New White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_New_White', 'Porcelain_New_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_214",
        "status": "active",
        "script_info": [
            "Material: Porcelain Old White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_Old_White', 'Porcelain_Old_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_215",
        "status": "active",
        "script_info": [
            "Material: Porcelain White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Porcelain_White', 'Porcelain_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_216",
        "status": "active",
        "script_info": [
            "Material: Bronze Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Brushed', 'Bronze_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_217",
        "status": "active",
        "script_info": [
            "Material: Bronze Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Polished', 'Bronze_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_218",
        "status": "active",
        "script_info": [
            "Material: Bronze Satin"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Bronze_Satin', 'Bronze_Satin' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_219",
        "status": "active",
        "script_info": [
            "Material: Gold Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Brushed', 'Gold_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_220",
        "status": "active",
        "script_info": [
            "Material: Gold Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Polished', 'Gold_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_221",
        "status": "active",
        "script_info": [
            "Material: Gold Satin"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Gold_Satin', 'Gold_Satin' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_222",
        "status": "active",
        "script_info": [
            "Material: Silver Brushed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Silver_Brushed', 'Silver_Brushed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_223",
        "status": "active",
        "script_info": [
            "Material: Silver Polished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Silver_Polished', 'Silver_Polished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_224",
        "status": "active",
        "script_info": [
            "Material: Silver Satin"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Silver_Satin', 'Silver_Satin' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_225",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Blue Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Blue_Matte', 'Stone_Marble_Blue_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_226",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Pink Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Pink_Matte', 'Stone_Marble_Pink_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_227",
        "status": "active",
        "script_info": [
            "Material: Stone Cladding"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Cladding', 'Stone_Cladding' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_228",
        "status": "active",
        "script_info": [
            "Material: Stone Granit BWB"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Granit_BWB', 'Stone_Granit_BWB' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_229",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Blue', 'Stone_Marble_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_230",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Pink"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Pink', 'Stone_Marble_Pink' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_231",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Grey"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Grey', 'Stone_Marble_Grey' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_232",
        "status": "active",
        "script_info": [
            "Material: Stone Rough Marble"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Rough_Marble', 'Stone_Rough_Marble' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_233",
        "status": "active",
        "script_info": [
            "Material: Brick Color Displacement"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Color_Displacement', 'Brick_Color_Displacement' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_234",
        "status": "active",
        "script_info": [
            "Material: Brick Natural V1"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Natural_V1', 'Brick_Natural_V1' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_235",
        "status": "active",
        "script_info": [
            "Material: Brick Old V3"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Old_V3', 'Brick_Old_V3' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_236",
        "status": "active",
        "script_info": [
            "Material: Brick Old V2"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Old_V2', 'Brick_Old_V2' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_237",
        "status": "active",
        "script_info": [
            "Material: Brick Basic V2"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Basic_V2', 'Brick_Basic_V2' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_238",
        "status": "active",
        "script_info": [
            "Material: Brick Irregular"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Irregular', 'Brick_Irregular' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_239",
        "status": "active",
        "script_info": [
            "Material: Brick Damage"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Brick_Damage', 'Brick_Damage' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_240",
        "status": "active",
        "script_info": [
            "Material: Stone Marble Yellow Matte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Stone_Marble_Yellow_Matte', 'Stone_Marble_Yellow_Matte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_241",
        "status": "active",
        "script_info": [
            "Material: Floor Ceramic Tiles Checker"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Floor_Ceramic_Tiles_Checker', 'Floor_Ceramic_Tiles_Checker' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_242",
        "status": "active",
        "script_info": [
            "Material: Floor Ceramic Tiles Color"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Floor_Ceramic_Tiles_Color', 'Floor_Ceramic_Tiles_Color' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_243",
        "status": "active",
        "script_info": [
            "Material: Floor Ceramic Tiles Color Variation 8x8"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Floor_Ceramic_Tiles_Color_Variation_8x8', 'Floor_Ceramic_Tiles_Color_Variation_8x8' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_244",
        "status": "active",
        "script_info": [
            "Material: Floor Tiles Rustic Color 4x4"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Floor_Tiles_Rustic_Color_4x4', 'Floor_Tiles_Rustic_Color_4x4' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_245",
        "status": "active",
        "script_info": [
            "Material: Tiling BeigeMarble"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_BeigeMarble', 'Tiling_BeigeMarble' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_246",
        "status": "active",
        "script_info": [
            "Material: Tiling Blue Checkered"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_Blue_Checkered', 'Tiling_Blue_Checkered' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_247",
        "status": "active",
        "script_info": [
            "Material: Tiling BLueMarble"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_BLueMarble', 'Tiling_BLueMarble' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_248",
        "status": "active",
        "script_info": [
            "Material: tiling Checkered"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'tiling_Checkered', 'tiling_Checkered' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_249",
        "status": "active",
        "script_info": [
            "Material: Tiling Old"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_Old', 'Tiling_Old' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_250",
        "status": "active",
        "script_info": [
            "Material: Tiling White"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_White', 'Tiling_White' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_251",
        "status": "active",
        "script_info": [
            "Material: Tiling White Marble"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Tiling_White_Marble', 'Tiling_White_Marble' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_252",
        "status": "active",
        "script_info": [
            "Material: Roofing ClayShingles Beige"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Roofing_ClayShingles_Beige', 'Roofing_ClayShingles_Beige' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_253",
        "status": "active",
        "script_info": [
            "Material: Roofing CorrugatedIron"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Roofing_CorrugatedIron', 'Roofing_CorrugatedIron' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_254",
        "status": "active",
        "script_info": [
            "Material: Roofing RedClay Tiles"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Roofing_RedClayTiles', 'Roofing_RedClayTiles' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_255",
        "status": "active",
        "script_info": [
            "Material: Rubber Bumpy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_Bumpy', 'Rubber_Bumpy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_256",
        "status": "active",
        "script_info": [
            "Material: Rubber Diamonds"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_Diamonds', 'Rubber_Diamonds' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_257",
        "status": "active",
        "script_info": [
            "Material: Rubber Ribbed"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_Ribbed', 'Rubber_Ribbed' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_258",
        "status": "active",
        "script_info": [
            "Material: Rubber Smooth Clear"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_Smooth_Clear', 'Rubber_Smooth_Clear' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_259",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothMatte"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothMatte', 'Rubber_SmoothMatte' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_260",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothMatte Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothMatte_Black', 'Rubber_SmoothMatte_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_261",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothMatte Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothMatte_Blue', 'Rubber_SmoothMatte_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_262",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothMatte Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothMatte_Green', 'Rubber_SmoothMatte_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_263",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothMatte Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothMatte_Red', 'Rubber_SmoothMatte_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_264",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothShiny"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothShiny', 'Rubber_SmoothShiny' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_265",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothShiny Black"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothShiny_Black', 'Rubber_SmoothShiny_Black' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_266",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothShiny Blue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothShiny_Blue', 'Rubber_SmoothShiny_Blue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_267",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothShiny Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothShiny_Green', 'Rubber_SmoothShiny_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_268",
        "status": "active",
        "script_info": [
            "Material: Rubber SmoothShiny Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_SmoothShiny_Red', 'Rubber_SmoothShiny_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_269",
        "status": "active",
        "script_info": [
            "Material: Rubber Used"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Rubber_Used', 'Rubber_Used' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_270",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Glossy Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Glossy_Green', 'Acrylic_Refractive_Glossy_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_271",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Glossy Neon Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Glossy_Neon_Green', 'Acrylic_Refractive_Glossy_Neon_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_272",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Glossy Neon Orange"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Glossy_Neon_Orange', 'Acrylic_Refractive_Glossy_Neon_Orange' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_273",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Glossy Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Glossy_Red', 'Acrylic_Refractive_Glossy_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_274",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Matte Green"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Matte_Green', 'Acrylic_Refractive_Matte_Green' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_275",
        "status": "active",
        "script_info": [
            "Material: Acrylic Refractive Matte Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Refractive_Matte_Red', 'Acrylic_Refractive_Matte_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_276",
        "status": "active",
        "script_info": [
            "Material: Acrylic Transparent Matte Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Transparent_Matte_Red', 'Acrylic_Transparent_Matte_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_277",
        "status": "active",
        "script_info": [
            "Material: Acrylic Transparent Glossy Red"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Acrylic_Transparent_Glossy_Red', 'Acrylic_Transparent_Glossy_Red' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_278",
        "status": "active",
        "script_info": [
            "Material: Plastic Transparent Solid ClearBlue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Transparent_Solid_ClearBlue', 'Plastic_Transparent_Solid_ClearBlue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_279",
        "status": "active",
        "script_info": [
            "Material: Plastic Transparent Thin ClearBlue"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Plastic_Transparent_Thin_ClearBlue', 'Plastic_Transparent_Thin_ClearBlue' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_280",
        "status": "active",
        "script_info": [
            "Material: Colored Glass"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Colored_Glass', 'Colored_Glass' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_281",
        "status": "active",
        "script_info": [
            "Material: Jade"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'jade', 'jade' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_282",
        "status": "active",
        "script_info": [
            "Material: Milk"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Milk', 'Milk' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_283",
        "status": "active",
        "script_info": [
            "Material: Wax"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wax', 'Wax' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_284",
        "status": "active",
        "script_info": [
            "Material: Wood Bark"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Bark', 'Wood_Bark' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_285",
        "status": "active",
        "script_info": [
            "Material: Wood Beech Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Beech_Glossy', 'Wood_Beech_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_286",
        "status": "active",
        "script_info": [
            "Material: Wood Beech Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Beech_Unfinished', 'Wood_Beech_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_287",
        "status": "active",
        "script_info": [
            "Material: Wood Cedar Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Cedar_Glossy', 'Wood_Cedar_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_288",
        "status": "active",
        "script_info": [
            "Material: Wood Cedar Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Cedar_Unfinished', 'Wood_Cedar_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_289",
        "status": "active",
        "script_info": [
            "Material: Wood Clear Rustic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Clear_Rustic', 'Wood_Clear_Rustic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_290",
        "status": "active",
        "script_info": [
            "Material: Wood Mahogany Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Mahogany_Glossy', 'Wood_Mahogany_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_291",
        "status": "active",
        "script_info": [
            "Material: Wood Mahogany Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Mahogany_Unfinished', 'Wood_Mahogany_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_292",
        "status": "active",
        "script_info": [
            "Material: Wood Maple Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Maple_Glossy', 'Wood_Maple_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_293",
        "status": "active",
        "script_info": [
            "Material: Wood Maple Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Maple_Unfinished', 'Wood_Maple_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_294",
        "status": "active",
        "script_info": [
            "Material: Wood Natural Maple"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Natural_Maple', 'Wood_Natural_Maple' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_295",
        "status": "active",
        "script_info": [
            "Material: Wood Oak Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Oak_Glossy', 'Wood_Oak_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_296",
        "status": "active",
        "script_info": [
            "Material: Wood Oak Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Oak_Unfinished', 'Wood_Oak_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_297",
        "status": "active",
        "script_info": [
            "Material: Wood Planks Oak Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Planks_Oak_Glossy', 'Wood_Planks_Oak_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_298",
        "status": "active",
        "script_info": [
            "Material: Wood Planks Oak Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Planks_Oak_Unfinished', 'Wood_Planks_Oak_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_299",
        "status": "active",
        "script_info": [
            "Material: Wood Rustic"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Rustic', 'Wood_Rustic' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_300",
        "status": "active",
        "script_info": [
            "Material: Wood Rustic Cherry"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Rustic_Cherry', 'Wood_Rustic_Cherry' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_301",
        "status": "active",
        "script_info": [
            "Material: Wood Wenge Glossy"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Wenge_Glossy', 'Wood_Wenge_Glossy' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    },
    {
        "case": "BL28_MAT_LIB_302",
        "status": "active",
        "script_info": [
            "Material: Wood Wenge Unfinished"
        ],
        "scene": "Test_Scene.blend",
        "functions": [
            "xml_path = os.path.join(material_library.path.get_library_path(), 'Wood_Wenge_Unfinished', 'Wood_Wenge_Unfinished' + '.xml')",
            "material = bpy.data.materials['Material']",
            "material_library.import_xml_material(material, 'Material', xml_path, False)",
            "rpr_render(case)"
        ]
    }
]